{"ast":null,"code":"var _jsxFileName = \"/Users/Ishuu/Desktop/cursor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [visibleLetters, setVisibleLetters] = useState([]);\n  const [flickerIntensity, setFlickerIntensity] = useState(0);\n  const [currentLetterIndex, setCurrentLetterIndex] = useState(0);\n  const [isStarted, setIsStarted] = useState(false);\n  const [letterSharpness, setLetterSharpness] = useState({});\n  const [startTime, setStartTime] = useState(null);\n  const word = \"MISFITS\";\n  const neonColors = ['#ff0080', '#00ff80', '#0080ff', '#ff8000', '#8000ff', '#ff0080', '#00ff80'];\n  useEffect(() => {\n    // Start the effect after a short delay\n    const startTimer = setTimeout(() => {\n      setIsStarted(true);\n      setVisibleLetters([]);\n      setCurrentLetterIndex(0);\n      setLetterSharpness({});\n      setStartTime(Date.now());\n    }, 1500);\n    return () => clearTimeout(startTimer);\n  }, []);\n  useEffect(() => {\n    if (!isStarted || currentLetterIndex >= word.length) return;\n\n    // Show each letter one by one with faster timing\n    const letterTimer = setTimeout(() => {\n      setVisibleLetters(prev => [...prev, currentLetterIndex]);\n      setCurrentLetterIndex(prev => prev + 1);\n    }, 300); // Faster timing for better flow\n\n    return () => clearTimeout(letterTimer);\n  }, [currentLetterIndex, word.length, isStarted]);\n  useEffect(() => {\n    if (visibleLetters.length === 0 || !startTime) return;\n\n    // Check if 10 seconds have passed, then start sharpening\n    const sharpnessInterval = setInterval(() => {\n      const elapsed = (Date.now() - startTime) / 1000; // Time in seconds\n\n      if (elapsed >= 10) {\n        // After 10 seconds, start sharpening dramatically\n        setLetterSharpness(prev => {\n          const newSharpness = {\n            ...prev\n          };\n          visibleLetters.forEach(letterIndex => {\n            if (!newSharpness[letterIndex]) {\n              newSharpness[letterIndex] = 0;\n            }\n            if (newSharpness[letterIndex] < 1) {\n              newSharpness[letterIndex] = Math.min(1, newSharpness[letterIndex] + 0.1); // Very fast sharpening\n            }\n          });\n          return newSharpness;\n        });\n      }\n    }, 50);\n    return () => clearInterval(sharpnessInterval);\n  }, [visibleLetters, startTime]);\n  useEffect(() => {\n    if (visibleLetters.length === 0) return;\n\n    // Smoother flicker effect\n    const flickerInterval = setInterval(() => {\n      setFlickerIntensity(Math.random() * 0.3 + 0.7);\n    }, 150);\n    return () => clearInterval(flickerInterval);\n  }, [visibleLetters.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"misfits-text\",\n      children: word.split('').map((letter, index) => {\n        const isVisible = visibleLetters.includes(index);\n        const sharpness = letterSharpness[index] || 0;\n        const blurAmount = isVisible ? (1 - sharpness) * 40 : 40; // Start very blurry\n        const opacity = isVisible ? flickerIntensity : 0;\n        const brightness = isVisible ? 0.2 + sharpness * 0.8 : 0.2; // More dramatic brightness change\n\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `letter ${isVisible ? 'visible' : ''}`,\n          style: {\n            opacity: opacity,\n            color: neonColors[index % neonColors.length],\n            textShadow: isVisible ? `0 0 10px ${neonColors[index % neonColors.length]}, 0 0 20px ${neonColors[index % neonColors.length]}, 0 0 30px ${neonColors[index % neonColors.length]}, 0 0 40px ${neonColors[index % neonColors.length]}` : 'none',\n            transform: isVisible ? `scale(${1 + (flickerIntensity - 0.7) * 0.05}) translateY(${(flickerIntensity - 0.7) * 2}px)` : 'scale(0.9) translateY(10px)',\n            filter: `blur(${blurAmount}px) brightness(${brightness})`,\n            transition: 'all 0.1s ease-out'\n          },\n          children: letter\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"766NLh1cp2lNyRttlYfsftAKHpI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","visibleLetters","setVisibleLetters","flickerIntensity","setFlickerIntensity","currentLetterIndex","setCurrentLetterIndex","isStarted","setIsStarted","letterSharpness","setLetterSharpness","startTime","setStartTime","word","neonColors","startTimer","setTimeout","Date","now","clearTimeout","length","letterTimer","prev","sharpnessInterval","setInterval","elapsed","newSharpness","forEach","letterIndex","Math","min","clearInterval","flickerInterval","random","className","children","split","map","letter","index","isVisible","includes","sharpness","blurAmount","opacity","brightness","style","color","textShadow","transform","filter","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Ishuu/Desktop/cursor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [visibleLetters, setVisibleLetters] = useState([]);\n  const [flickerIntensity, setFlickerIntensity] = useState(0);\n  const [currentLetterIndex, setCurrentLetterIndex] = useState(0);\n  const [isStarted, setIsStarted] = useState(false);\n  const [letterSharpness, setLetterSharpness] = useState({});\n  const [startTime, setStartTime] = useState(null);\n\n  const word = \"MISFITS\";\n  const neonColors = ['#ff0080', '#00ff80', '#0080ff', '#ff8000', '#8000ff', '#ff0080', '#00ff80'];\n\n  useEffect(() => {\n    // Start the effect after a short delay\n    const startTimer = setTimeout(() => {\n      setIsStarted(true);\n      setVisibleLetters([]);\n      setCurrentLetterIndex(0);\n      setLetterSharpness({});\n      setStartTime(Date.now());\n    }, 1500);\n\n    return () => clearTimeout(startTimer);\n  }, []);\n\n  useEffect(() => {\n    if (!isStarted || currentLetterIndex >= word.length) return;\n\n    // Show each letter one by one with faster timing\n    const letterTimer = setTimeout(() => {\n      setVisibleLetters(prev => [...prev, currentLetterIndex]);\n      setCurrentLetterIndex(prev => prev + 1);\n    }, 300); // Faster timing for better flow\n\n    return () => clearTimeout(letterTimer);\n  }, [currentLetterIndex, word.length, isStarted]);\n\n  useEffect(() => {\n    if (visibleLetters.length === 0 || !startTime) return;\n\n    // Check if 10 seconds have passed, then start sharpening\n    const sharpnessInterval = setInterval(() => {\n      const elapsed = (Date.now() - startTime) / 1000; // Time in seconds\n      \n      if (elapsed >= 10) {\n        // After 10 seconds, start sharpening dramatically\n        setLetterSharpness(prev => {\n          const newSharpness = { ...prev };\n          visibleLetters.forEach(letterIndex => {\n            if (!newSharpness[letterIndex]) {\n              newSharpness[letterIndex] = 0;\n            }\n            if (newSharpness[letterIndex] < 1) {\n              newSharpness[letterIndex] = Math.min(1, newSharpness[letterIndex] + 0.1); // Very fast sharpening\n            }\n          });\n          return newSharpness;\n        });\n      }\n    }, 50);\n\n    return () => clearInterval(sharpnessInterval);\n  }, [visibleLetters, startTime]);\n\n  useEffect(() => {\n    if (visibleLetters.length === 0) return;\n\n    // Smoother flicker effect\n    const flickerInterval = setInterval(() => {\n      setFlickerIntensity(Math.random() * 0.3 + 0.7);\n    }, 150);\n\n    return () => clearInterval(flickerInterval);\n  }, [visibleLetters.length]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"misfits-text\">\n        {word.split('').map((letter, index) => {\n          const isVisible = visibleLetters.includes(index);\n          const sharpness = letterSharpness[index] || 0;\n          const blurAmount = isVisible ? (1 - sharpness) * 40 : 40; // Start very blurry\n          const opacity = isVisible ? flickerIntensity : 0;\n          const brightness = isVisible ? (0.2 + sharpness * 0.8) : 0.2; // More dramatic brightness change\n          \n          return (\n            <span\n              key={index}\n              className={`letter ${isVisible ? 'visible' : ''}`}\n              style={{\n                opacity: opacity,\n                color: neonColors[index % neonColors.length],\n                textShadow: isVisible \n                  ? `0 0 10px ${neonColors[index % neonColors.length]}, 0 0 20px ${neonColors[index % neonColors.length]}, 0 0 30px ${neonColors[index % neonColors.length]}, 0 0 40px ${neonColors[index % neonColors.length]}`\n                  : 'none',\n                transform: isVisible \n                  ? `scale(${1 + (flickerIntensity - 0.7) * 0.05}) translateY(${(flickerIntensity - 0.7) * 2}px)` \n                  : 'scale(0.9) translateY(10px)',\n                filter: `blur(${blurAmount}px) brightness(${brightness})`,\n                transition: 'all 0.1s ease-out'\n              }}\n            >\n              {letter}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}