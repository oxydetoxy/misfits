{"ast":null,"code":"var _jsxFileName = \"/Users/Ishuu/Desktop/cursor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [visibleLetters, setVisibleLetters] = useState([]);\n  const [flickerIntensity, setFlickerIntensity] = useState(0);\n  const [currentLetterIndex, setCurrentLetterIndex] = useState(0);\n  const [isStarted, setIsStarted] = useState(false);\n  const [letterSharpness, setLetterSharpness] = useState({});\n  const [startTime, setStartTime] = useState(null);\n  const [flickerActive, setFlickerActive] = useState(false);\n  const word = \"MISFITS\";\n  const neonColors = ['#ff0080', '#00ff80', '#0080ff', '#ff8000', '#8000ff', '#ff0080', '#00ff80'];\n  useEffect(() => {\n    // Start the effect after a short delay\n    const startTimer = setTimeout(() => {\n      setIsStarted(true);\n      setVisibleLetters([]);\n      setCurrentLetterIndex(0);\n      setLetterSharpness({});\n      setStartTime(Date.now());\n      setFlickerActive(true);\n    }, 1500);\n    return () => clearTimeout(startTimer);\n  }, []);\n  useEffect(() => {\n    if (!isStarted || currentLetterIndex >= word.length) return;\n\n    // Show each letter one by one\n    const letterTimer = setTimeout(() => {\n      setVisibleLetters(prev => [...prev, currentLetterIndex]);\n      setCurrentLetterIndex(prev => prev + 1);\n    }, 300);\n    return () => clearTimeout(letterTimer);\n  }, [currentLetterIndex, word.length, isStarted]);\n\n  // Single effect to handle flicker with automatic stop\n  useEffect(() => {\n    if (!flickerActive || visibleLetters.length === 0) return;\n    let flickerCount = 0;\n    const maxFlickers = 15; // Stop after 15 flickers\n\n    const flickerInterval = setInterval(() => {\n      flickerCount++;\n      if (flickerCount >= maxFlickers) {\n        // Stop flicker\n        clearInterval(flickerInterval);\n        setFlickerActive(false);\n        setFlickerIntensity(1); // Set to stable\n      } else {\n        // Continue flicker\n        setFlickerIntensity(Math.random() * 0.5 + 0.5);\n      }\n    }, 100);\n    return () => clearInterval(flickerInterval);\n  }, [flickerActive, visibleLetters.length]);\n\n  // Letter sharpening effect\n  useEffect(() => {\n    if (visibleLetters.length === 0 || !startTime) return;\n    const sharpeningInterval = setInterval(() => {\n      setLetterSharpness(prev => {\n        const newSharpness = {\n          ...prev\n        };\n        visibleLetters.forEach(letterIndex => {\n          if (!newSharpness[letterIndex]) {\n            newSharpness[letterIndex] = 0;\n          }\n          if (newSharpness[letterIndex] < 1) {\n            newSharpness[letterIndex] = Math.min(1, newSharpness[letterIndex] + 0.02);\n          }\n        });\n        return newSharpness;\n      });\n    }, 50);\n    return () => clearInterval(sharpeningInterval);\n  }, [visibleLetters, startTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"misfits-text\",\n      children: word.split('').map((letter, index) => {\n        const isVisible = visibleLetters.includes(index);\n        const sharpness = letterSharpness[index] || 0;\n        const blurAmount = isVisible ? (1 - sharpness) * 20 : 20;\n        const opacity = isVisible ? 0.5 + sharpness * 0.5 : 0;\n        const brightness = isVisible ? 0.5 + sharpness * 0.5 : 0.5;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `letter ${isVisible ? 'visible' : ''}`,\n          style: {\n            opacity: opacity,\n            color: neonColors[index % neonColors.length],\n            textShadow: isVisible ? `0 0 10px ${neonColors[index % neonColors.length]}, 0 0 20px ${neonColors[index % neonColors.length]}, 0 0 30px ${neonColors[index % neonColors.length]}, 0 0 40px ${neonColors[index % neonColors.length]}` : 'none',\n            transform: isVisible ? `scale(${1 + (flickerIntensity - 0.7) * 0.02}) translateY(${(flickerIntensity - 0.7) * 0.5}px)` : 'scale(0.9) translateY(10px)',\n            filter: `blur(${blurAmount}px) brightness(${brightness})`,\n            transition: 'all 0.2s ease-out'\n          },\n          children: letter\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RtCFHF0fkIBOAOM2J9dGc9cURe4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","visibleLetters","setVisibleLetters","flickerIntensity","setFlickerIntensity","currentLetterIndex","setCurrentLetterIndex","isStarted","setIsStarted","letterSharpness","setLetterSharpness","startTime","setStartTime","flickerActive","setFlickerActive","word","neonColors","startTimer","setTimeout","Date","now","clearTimeout","length","letterTimer","prev","flickerCount","maxFlickers","flickerInterval","setInterval","clearInterval","Math","random","sharpeningInterval","newSharpness","forEach","letterIndex","min","className","children","split","map","letter","index","isVisible","includes","sharpness","blurAmount","opacity","brightness","style","color","textShadow","transform","filter","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Ishuu/Desktop/cursor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [visibleLetters, setVisibleLetters] = useState([]);\n  const [flickerIntensity, setFlickerIntensity] = useState(0);\n  const [currentLetterIndex, setCurrentLetterIndex] = useState(0);\n  const [isStarted, setIsStarted] = useState(false);\n  const [letterSharpness, setLetterSharpness] = useState({});\n  const [startTime, setStartTime] = useState(null);\n  const [flickerActive, setFlickerActive] = useState(false);\n\n  const word = \"MISFITS\";\n  const neonColors = ['#ff0080', '#00ff80', '#0080ff', '#ff8000', '#8000ff', '#ff0080', '#00ff80'];\n\n  useEffect(() => {\n    // Start the effect after a short delay\n    const startTimer = setTimeout(() => {\n      setIsStarted(true);\n      setVisibleLetters([]);\n      setCurrentLetterIndex(0);\n      setLetterSharpness({});\n      setStartTime(Date.now());\n      setFlickerActive(true);\n    }, 1500);\n\n    return () => clearTimeout(startTimer);\n  }, []);\n\n  useEffect(() => {\n    if (!isStarted || currentLetterIndex >= word.length) return;\n\n    // Show each letter one by one\n    const letterTimer = setTimeout(() => {\n      setVisibleLetters(prev => [...prev, currentLetterIndex]);\n      setCurrentLetterIndex(prev => prev + 1);\n    }, 300);\n\n    return () => clearTimeout(letterTimer);\n  }, [currentLetterIndex, word.length, isStarted]);\n\n  // Single effect to handle flicker with automatic stop\n  useEffect(() => {\n    if (!flickerActive || visibleLetters.length === 0) return;\n\n    let flickerCount = 0;\n    const maxFlickers = 15; // Stop after 15 flickers\n    \n    const flickerInterval = setInterval(() => {\n      flickerCount++;\n      \n      if (flickerCount >= maxFlickers) {\n        // Stop flicker\n        clearInterval(flickerInterval);\n        setFlickerActive(false);\n        setFlickerIntensity(1); // Set to stable\n      } else {\n        // Continue flicker\n        setFlickerIntensity(Math.random() * 0.5 + 0.5);\n      }\n    }, 100);\n\n    return () => clearInterval(flickerInterval);\n  }, [flickerActive, visibleLetters.length]);\n\n  // Letter sharpening effect\n  useEffect(() => {\n    if (visibleLetters.length === 0 || !startTime) return;\n\n    const sharpeningInterval = setInterval(() => {\n      setLetterSharpness(prev => {\n        const newSharpness = { ...prev };\n        visibleLetters.forEach(letterIndex => {\n          if (!newSharpness[letterIndex]) {\n            newSharpness[letterIndex] = 0;\n          }\n          if (newSharpness[letterIndex] < 1) {\n            newSharpness[letterIndex] = Math.min(1, newSharpness[letterIndex] + 0.02);\n          }\n        });\n        return newSharpness;\n      });\n    }, 50);\n\n    return () => clearInterval(sharpeningInterval);\n  }, [visibleLetters, startTime]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"misfits-text\">\n        {word.split('').map((letter, index) => {\n          const isVisible = visibleLetters.includes(index);\n          const sharpness = letterSharpness[index] || 0;\n          const blurAmount = isVisible ? (1 - sharpness) * 20 : 20;\n          const opacity = isVisible ? (0.5 + sharpness * 0.5) : 0;\n          const brightness = isVisible ? (0.5 + sharpness * 0.5) : 0.5;\n          \n          return (\n            <span\n              key={index}\n              className={`letter ${isVisible ? 'visible' : ''}`}\n              style={{\n                opacity: opacity,\n                color: neonColors[index % neonColors.length],\n                textShadow: isVisible \n                  ? `0 0 10px ${neonColors[index % neonColors.length]}, 0 0 20px ${neonColors[index % neonColors.length]}, 0 0 30px ${neonColors[index % neonColors.length]}, 0 0 40px ${neonColors[index % neonColors.length]}`\n                  : 'none',\n                transform: isVisible \n                  ? `scale(${1 + (flickerIntensity - 0.7) * 0.02}) translateY(${(flickerIntensity - 0.7) * 0.5}px)` \n                  : 'scale(0.9) translateY(10px)',\n                filter: `blur(${blurAmount}px) brightness(${brightness})`,\n                transition: 'all 0.2s ease-out'\n              }}\n            >\n              {letter}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}